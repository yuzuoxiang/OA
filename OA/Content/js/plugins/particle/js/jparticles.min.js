!function (a) { "use strict"; var b, c; c = {}, a.fn.jParticle = function (c) { return this.each(function (d, e) { "object" == typeof e.sandbox && a(e).removeJParticle(), e.sandbox = b(e, c) }), this }, a.fn.removeJParticle = function () { return this.each(function (a, b) { b.sandbox && (b.sandbox.remove(), delete b.sandbox) }), this }, a.fn.freezeJParticle = function () { return this.each(function (a, b) { b.sandbox && b.sandbox.freeze() }), this }, a.fn.unfreezeJParticle = function () { return this.each(function (a, b) { b.sandbox && b.sandbox.unfreeze() }), this }, b = function (b, d) { var e, f; return e = {}, e.canvas = {}, e.mouse = {}, e.particles = [], e.isAnimated = !1, e.initialize = function (a, b) { e.initParams(b), e.initHTML(a), e.initParticles(), e.initEvents(), e.initAnimation() }, e.initParams = function (b) { b && b.color && (!b.particle || b.particle && !b.particle.color) && (b.particle || (b.particle = {}), b.particle.color = b.color), e.params = a.extend({ particlesNumber: 100, linkDist: 50, createLinkDist: 150, disableLinks: !1, disableMouse: !1, background: "black", color: "white", width: null, height: null, linksWidth: 1 }, b) }, e.initHTML = function (b) { var c; c = e.canvas, c.container = a(b), c.element = a("<canvas/>"), c.context = c.element.get(0).getContext("2d"), c.container.append(c.element), c.element.css("display", "block"), c.element.get(0).width = e.params.width ? e.params.width : c.container.width(), c.element.get(0).height = e.params.height ? e.params.height : c.container.height(), c.element.css("background", e.params.background) }, e.resize = function (a, b) { a && (canvas.element.get(0).width = a), b && (canvas.element.get(0).height = b) }, e.initParticles = function () { var a, b; for (a = 0, b = e.params.particlesNumber; b > a; a += 1) e.particles.push(f(e.canvas.element.get(0), e.params.particle)) }, e.initEvents = function () { e.canvas.element.mouseenter(function () { e.mouse.hoverCanvas = !0, e.isAnimated || e.draw() }), e.canvas.element.mouseleave(function () { e.mouse.hoverCanvas = !1 }), e.canvas.element.mousemove(function (b) { e.mouse = a.extend(e.mouse, c.getMousePosition(b, e.canvas.element[0])) }) }, e.initAnimation = function () { window.requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.ORequestAnimationFrame || window.msRequestAnimationFrame || function (a) { setTimeOut(a, 1e3 / 60) }, e.isAnimated = !0, e.draw() }, e.draw = function () { var a, b, c, d, f, g; for (a = 0, c = e.particles.length, d = e.canvas, d.context.clearRect(0, 0, d.element.get(0).width, d.element.get(0).height) ; c > a; a += 1) if (f = e.particles[a], e.isAnimated && f.update(), f.draw(), !e.params.disableMouse && e.mouse.hoverCanvas && e.drawLink(f.getPosition("x"), f.getPosition("y"), e.mouse.x, e.mouse.y), !e.params.disableLinks) for (b = a + 1; c > b; b += 1) g = e.particles[b], e.drawLink(f.getPosition("x"), f.getPosition("y"), g.getPosition("x"), g.getPosition("y")); e.requestID = window.requestAnimFrame(e.draw) }, e.drawLink = function (a, b, d, f) { var g; c.getDistance(a, b, d, f) <= e.params.createLinkDist && (g = e.canvas.context, g.save(), g.beginPath(), g.lineWidth = e.params.linksWidth, g.moveTo(a, b), g.lineTo(d, f), g.globalAlpha = e.getOpacityLink(a, b, d, f), g.strokeStyle = e.params.color, g.lineCap = "round", g.stroke(), g.closePath(), g.restore()) }, e.getOpacityLink = function (a, b, d, f) { var g, h, i, j; return g = c.getDistance(a, b, d, f), i = e.params.linkDist, j = e.params.createLinkDist, h = i >= g ? 1 : g > j ? 0 : 1 - 100 * (g - i) / (j - i) / 100 }, e.freeze = function () { e.isAnimated && (e.isAnimated = !1) }, e.unfreeze = function () { e.isAnimated || (e.isAnimated = !0) }, e.remove = function () { e.canvas.element.remove() }, f = function (b, d) { var e; return e = {}, e.canvas = {}, e.vector = {}, e.initialize = function (b, c) { e.params = a.extend({ color: "white", minSize: 2, maxSize: 4, speed: 60 }, c), e.setCanvasContext(b), e.initSize(), e.initPosition(), e.initVectors() }, e.initPosition = function () { e.x = c.getRandNumber(0 + e.radius, e.canvas.element.width - e.radius), e.y = c.getRandNumber(0 + e.radius, e.canvas.element.height - e.radius) }, e.initSize = function () { e.size = c.getRandNumber(e.params.minSize, e.params.maxSize), e.radius = e.size / 2 }, e.initVectors = function () { do e.vector.x = c.getRandNumber(-e.params.speed / 60, e.params.speed / 60, !1), e.vector.y = c.getRandNumber(-e.params.speed / 60, e.params.speed / 60, !1); while (0 == e.vector.x || 0 == e.vector.y) }, e.setCanvasContext = function (a) { var b; if (e.canvas.element = a, b = a.getContext("2d"), "object" != typeof b || "object" != typeof b.canvas) throw "Error: Can't set canvas context to Particle because context isn't a CanvasRenderingContext2D object."; e.canvas.context = b }, e.draw = function () { var a = e.canvas.context; a.beginPath(), a.arc(e.x, e.y, e.size / 2, 0, 2 * Math.PI), a.fillStyle = e.params.color, a.fill(), a.closePath() }, e.update = function () { e.x += e.vector.x, e.y += e.vector.y, (0 > e.x - e.radius || e.x + e.radius > e.canvas.element.width) && (e.vector.x = -e.vector.x), (0 > e.y - e.radius || e.y + e.radius > e.canvas.element.height) && (e.vector.y = -e.vector.y) }, e.getPosition = function (a) { return "string" == typeof a && "x" != a && "y" != a && (a = null), "string" == typeof a ? e[a] : { x: e.x, y: e.y } }, e.initialize(b, d), { getPosition: e.getPosition, update: e.update, draw: e.draw } }, e.initialize(b, d), { remove: e.remove, freeze: e.freeze, unfreeze: e.unfreeze, resize: e.resize } }, c.getRandNumber = function (a, b, c) { var d; return null == a && (a = 0), null == b && (b = 10), null == c && (c = !0), d = Math.random() * (b - a) + a, c ? Math.round(d) : d }, c.getDistance = function (a, b, c, d) { return Math.sqrt(Math.pow(c - a, 2) + Math.pow(d - b, 2)) }, c.getMousePosition = function (b, c) { var d; return "undefined" == typeof c && (c = a("body")[0]), d = c.getBoundingClientRect(), { x: b.clientX - d.left, y: b.clientY - d.top } } }(jQuery);